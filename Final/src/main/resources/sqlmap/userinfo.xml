<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE  mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

	<mapper namespace="userinfo">
	
	<!-- 마이페이지 내 게시글선택 삭제 -->
	<delete id="myBoardDelete" parameterType="int">
	delete from Board where Post_num = #{Post_num};
	</delete>
	
	<!-- 마이페이지 내 댓글 선택 삭제 -->
	<delete id="myCommentDelete" parameterType="int">
	delete from Comment where Comment_code = #{Comment_code};
	</delete>
	
	
		<!-- 
			* 22-09-23 HIKARI 쿼리 작성
			유저 정보 모두 뽑아올수 있음
			
		-->
		<!-- 마이페이지 게시글 count -->
	<select id="count" parameterType="com.Final.Final1.board.model.MyWriterListDTO" resultType="int">
		select count(*) from Board where Post_writer = #{Post_writer};
	</select>

	<!-- 마이페이지 나의 게시글 불러오기 -->
<select id="myWriterlist" parameterType="com.Final.Final1.board.model.MyWriterListDTO" resultType="hashMap">
	 <include refid="paging_header" /> 
			select Post_num,Board_code,Post_writer,Post_title,Post_contents,Post_view,Post_like,Post_cr_date,Post_up_date,Post_de_date,Post_status from
	Board where Post_writer = #{Post_writer}
	 <include refid="paging_footer" />	
	 
</select>
	

	 
	 <select id="myRequestlist" parameterType="com.Final.Final1.board.model.MyWriterListDTO" resultType="hashMap">

		select Request_code,Requester,Request_title, Request_contents, 
	SolverReady_cnt, Commission, Recruiting_time from Request where Requester=#{Requester};
	
	</select>
	
	
	
	
	<!-- 내 댓글 내역 -->
	<select id="myCommentlist" parameterType="com.Final.Final1.board.model.MyCommentListDTO" resultType="hashMap">
	 <include refid="paging_header" /> 
		select Comment_code,Post_num,Comment_writer,Comment_contents,Comment_like,Comment_cr_date,Comment_up_date,Comment_de_date,Comment_status from Comment where Comment_writer=#{Comment_writer}
	<include refid="paging_footer" /> 

	</select>
	
	<!-- 내 댓글 내역 수   -->
	<select id="commentCount" parameterType="com.Final.Final1.board.model.MyCommentListDTO" resultType="int">
		select count(*) from Comment where Comment_writer=#{Comment_writer};
	</select>
	

	 
	<!-- 유저의 회원정보 수정을 위한 부가적인 정보를 다 뽑아온다 -->
	<select id="Userinfo" resultType="hashMap">
		select User_code, User_id, User_pw, User_name,User_nickname,User_score,
		User_point,commission,Phone_num,Email_address,Team_name,User_introduce,
		User_contact1,User_contact2,User_contact3 from User where User_id=#{User_id};
	</select>
	
	<!-- 유저 전적 카운트 뽑아오기 -->
	
	<select id="UserReq_cnt" resultType="int">
		select Req_cnt from User where User_id=#{User_id};
	</select>
	<select id="UserSol_cnt" resultType="int">
		select Sol_cnt from User where User_id=#{User_id};
	</select>
	<select id="UserDrop_Req_cnt" resultType="int">
		select Drop_Req_cnt from User where User_id=#{User_id};
	</select>
	<select id="UserDrop_Sol_cnt" resultType="int">
		select Drop_Sol_cnt from User where User_id=#{User_id};
	</select>
	
	<!-- 이메일 확인후 정보 있을시 ㅇ이디 값 뱉어줌 -->
	<select id="UserEmailinfo" resultType="String">
		select User_id,Email_address from User where Email_address=#{Email_address};
	</select>
	<!-- 유저 이메일 아이디 체크후 비번 뱉어줌 -->
	<select id="UserEmailAndIDinfo" resultType="String">
		select User_pw from User where Email_address=#{Email_address} and User_id=#{User_id};
	</select>
	
	
	
	<insert id="insert" >
		insert into Attachment (ORG_File_name, STORED_File_name)  value(#{ORG_File_name},#{STORED_File_name});
	</insert>
	
	<!-- 유저 프로필사진 업데이트 -->
	<update id="updateUserPhoto" >
		update User set IMG_File_name = #{IMG_File_name}, IMG_URL_name = #{IMG_URL_name} where User_id = #{User_id};
	</update>
	
	
	<select id="UserPhotoView" resultType="String">
		select IMG_File_name from User where user_id= #{User_id};
	</select>
	
	
	
	<!-- 회원의 포인트 뽑아옴 -->
	<select id="UserPoint" resultType="int">
		select User_point from User where User_id=#{User_id};
	</select>
	
	<!-- 닉네임 변경 -->
	<update id="UserSetNickname" parameterType="hashMap">
		update User set User_nickname =#{User_nickname} 
		where User_id = #{User_id};
	</update>
	
	<!-- 폰번호 변경 -->
	<update id="UserSetPhone_num" parameterType="hashMap">
		update User set Phone_num =#{Phone_num} 
		where User_id = #{User_id};
	</update>
	
	<!-- 이메일 변경 -->
	<update id="UserSetEmail_address" parameterType="hashMap">
		update User set Email_address =#{Email_address} 
		where User_id = #{User_id};
	</update>
	
	<!-- 비번 변경 -->
	<update id="UserSetUser_pw" parameterType="hashMap">
		update User set User_pw =#{User_pw} 
		where User_id = #{User_id};
	</update>
	
	<!-- 자기소개 변경 -->
	<update id="UserSetUser_introduce" parameterType="hashMap">
		update User set User_introduce =#{User_introduce} 
		where User_id = #{User_id};
	</update>

	<!-- 컨택트 주소 변경 -->
	<update id="UserContactSet" parameterType="hashMap">
		update User set User_contact1 = #{User_contact1}, User_contact2 = #{User_contact2}, User_contact3 = #{User_contact2} where User_id = #{User_id};
	</update>

		
	<!--10-04 김양희 유저의 mypage 둘러보기 페이지에서 유저정보 다시 가져오기 (양광모 이미지파일네임 추가)-->	
	<select id="mypageUserinfo" parameterType="hashMap" resultType="hashMap">
		select User_code, User_id, User_pw, User_name,User_nickname,User_score,
		User_point,commission,Phone_num,Email_address,User_introduce, admin_auth,
		User_contact1,User_contact2,User_contact3, Team_name, Leader_auth,IMG_File_name from User where 
		User_nickname=#{User_nickname};
	</select>
	<!-- 10-04 김양희 유저가 팀 신청한 적 있는지(조건) -->
	<select id="teamnotmember_select" parameterType="hashMap" resultType="hashMap">
		select Team_unaccept_member, Team_name from Team_NOT_Members where Team_unaccept_member = #{User_nickname};
	</select>
	
	<!-- 10-04 김양희 신청취소하면 delete -->
	<delete id="teamnotmember_delete" parameterType="String">
		delete from Team_NOT_Members where Team_unaccept_member = #{User_nickname};
	</delete>
	

	<!-- 계좌정보 변경 -->
	
  <!-- 회원탈퇴하기 -->
		<delete id="UserDelete" parameterType="String">
			delete from User where User_id= #{User_id};
		</delete>
	
	<!-- 페이징 -->
	<sql id="paging_header">
		select *
		from(
			select @ROWNUM:=@ROWNUM+1 as rn, A.* 
			from(
	</sql>
	<sql id="paging_footer">
		) A
	where (@rownum:=0)=0 ) rn 
	where rn between #{start} and #{end}
	
	</sql>
	
	
	
	
	

</mapper>

