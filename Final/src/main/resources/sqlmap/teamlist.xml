<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE  mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="team">
	
	<!-- 전체목록 불러오는 쿼리 -->
	<select id="list" parameterType="hashMap" resultType="hashMap">
		select t1.Team_code, t1.Team_name, t1.Team_intro, t1.Team_cr_date from Team t1
		left outer join Team_has_Tags t2
		on t1.Team_code = t2.Team_Team_code
		<include refid="search"/>
		group by t1.Team_name
		order by Team_cr_date DESC;
	</select>
	
	<!-- 전체목록 중 팀 태그 따로 불러옴 -->
	<select id="taglist" parameterType="hashMap" resultType="hashMap">
		 select t.Team_code, t.Team_name, tag.Tags_Tag_Name from Team t inner join Team_has_Tags tag on t.Team_code = tag.Team_Team_code;
	</select>
	
	<!-- 팀만들기 -->
	<insert id="teammake" parameterType="hashMap">  
	    insert into Team (Team_name,Team_intro) values (#{teamname}, #{teamintro});
	</insert>
	
	<select id="teammakecheck" parameterType="hashMap" resultType="hashMap">
		select Team_name from Team where Team_name = #{teamname};
	</select>
	
	<!-- 태그들 불러오기 -->
	<select id="tags" parameterType="hashMap" resultType="hashMap">
		select Tag_Name from Tags;
	</select>
	
	<!-- 팀 가입하기 -->
	<update id="teamjoin" parameterType="hashMap">
		update User set Team_name = #{jointeamname} where user_id = #{User_id};
	</update>
	
	
	<sql id="search">
		<choose>
	         <when test="search_option == 'all' ">
	            where 1=1
	            and(t1.Team_name like CONCAT('%', #{keyword}, '%')
	               or t1.Team_intro like CONCAT('%', #{keyword}, '%')
	               or t2.Tags_Tag_Name like CONCAT ('%', #{keyword} ,'%')
	               )
	         </when>
	         <when test="search_option == 'Teamname'">
	            where 1=1 and t1.Team_name like CONCAT('%', #{keyword}, '%')
	         </when>
	          <when test="search_option == 'tagname'">
	            where 1=1 and t2.Tags_Tag_Name like CONCAT ('%', #{keyword} ,'%')
	         </when>
	      </choose>
	</sql>
	
</mapper>